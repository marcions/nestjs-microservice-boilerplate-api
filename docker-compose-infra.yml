version: '3'

services:
  mongo:
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
      - ./scripts/mongo/rs-init.sh:/scripts/mongo/rs-init.sh
    networks:
      - mongo-compose-network
    env_file:
      - .env
  postgres:
    container_name: nestjs-microservice-postgres
    image: postgres
    env_file:
      - .env
    ports:
      - '5432:5432'
    volumes:
      - nestjs-microservice-postgres:/data/postgres
      - ./scripts/postgres/create-database.sql:/docker-entrypoint-initdb.d/create-database.sql
    restart: always
  redis:
    container_name: nestjs-microservice-redis
    image: 'redis:alpine'
    volumes:
      - nestjs-microservice-redis:/data
    ports:
      - 6379:6379
  zipkin-all-in-one:
    container_name: nestjs-microservice-zipkin-all-in-one
    image: openzipkin/zipkin:latest
    ports:
      - "9411:9411"
    env_file:
      - .env
  prometheus:
    container_name: nestjs-microservice-prometheus
    image: prom/prometheus:v2.47.0
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--enable-feature=otlp-write-receiver'
      - '--enable-feature=exemplar-storage'
    env_file:
      - .env
    ports:
      - '9090:9090'
    volumes:
      - ./scripts/prometheus/config.yml:/etc/prometheus/prometheus.yml
  collector:
    container_name: nestjs-microservice-collector
    image: otel/opentelemetry-collector-contrib:latest
    command: [ "--config=/conf/collector-config.yaml" ]
    volumes:
      - ./scripts/prometheus/collector-config.yaml:/conf/collector-config.yaml
    ports:
      - "9464:9464"
      - "4317:4317"
      - "4318:4318"
    depends_on:
      - zipkin-all-in-one

volumes:
  nestjs-microservice-postgres:
  nestjs-microservice-redis:
  mongo-data:
networks: 
    mongo-compose-network:
      driver: bridge